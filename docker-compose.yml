services:
  user-service:
    build: ./src/user
    ports:
      - "3000:3000"
      - "5052:5052"
    depends_on:
      - mongo
    restart: always

  video-service:
    build: ./src/video
    ports:
      - "3001:3000"
      - "5053:5052"
    depends_on:
      - mongo
      - elasticsearch
    restart: always
  mongo:
    image: mongo
    container_name: mongo_data
    environment: 
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.21
    container_name: elasticsearch_app
    environment:
      - discovery.type=single-node  # disable cluster
      - xpack.security.enabled=false # disable security
      - xpack.security.http.ssl.enabled=false
    networks:
      - elk 
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data # elasticsearch data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2  # Use the desired Kibana version
    container_name: kibana_app
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - elk
    depends_on:
      - elasticsearch

  redis: 
    image: redis
    container_name: redis_app
    ports:
      - "6379:6379"

networks:
  elk:
    driver: bridge

volumes: 
  mongo-data:
  es-data:
  redis-data: